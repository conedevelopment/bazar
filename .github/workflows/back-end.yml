name: Back-end

on:
  push:
    branches:
      - master
  pull_request: null

jobs:
  unit_tests:
    strategy:
      fail-fast: true
      matrix:
        os: ["ubuntu-22.04"]
        php: ["8.2", "8.3"]
        laravel: ["^11.0"]
        dependency-version: ["highest"]

    name: "Unit - PHP ${{ matrix.php }} - L ${{ matrix.laravel }} - ${{ matrix.dependency-version }}"

    runs-on: "${{ matrix.os }}"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, fileinfo, exif
          tools: composer:v2
          coverage: xdebug3

      - name: Check Composer configuration
        run: composer validate --no-interaction # @dev --strict

      - name: Install dependencies
        if: ${{ matrix.dependency-version == 'highest' }}
        run: composer update --no-interaction --no-progress --prefer-dist --with="laravel/framework:${{ matrix.laravel }}"

      - name: Install locked dependencies
        if: ${{ matrix.dependency-version == 'locked' }}
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Check for PSR-4 mapping errors
        run: composer dump-autoload --optimize --strict-psr

      - name: Execute tests
        run: composer exec -- phpunit

      - name: Send coverage to Coveralls
        if: ${{ matrix.os == 'ubuntu-22.04' && matrix.php == '8.2' && matrix.laravel == '^11.0' }}
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          wget "https://github.com/php-coveralls/php-coveralls/releases/download/v2.7.0/php-coveralls.phar"
          php ./php-coveralls.phar -v

  static_analysis:
    name: "Static Analysis"
    runs-on: "ubuntu-22.04"
    timeout-minutes: 5
    steps:
    -
      name: "Set up PHP"
      uses: "shivammathur/setup-php@v2"
      with:
        php-version: "8.2"
        extensions: "dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd, fileinfo, exif"
        coverage: "none"
    -
      name: "Checkout repository"
      uses: "actions/checkout@v4"
    -
      name: "Check JSON files"
      run: |
        git ls-files --cached -z -- '*.json' \
          | xargs -t --null -L 1 -- \
            php -r 'json_decode(file_get_contents($argv[1]), null, 512, JSON_THROW_ON_ERROR);'
    -
      name: "Validate Composer configuration"
      run: "composer validate --no-interaction --strict"
    -
      name: "Install dependencies"
      uses: "ramsey/composer-install@v3"
      with:
        dependency-versions: "locked"
    -
      name: "Check PSR-4 mapping"
      run: "composer dump-autoload --dev --optimize --strict-psr"
    -
      # https://github.com/phpstan/phpstan/issues/9475
      name: "Search for $this->$this typo"
      run: |
        ! git grep --line-number -e '\$this\s*->\s*\$this' -- ':!:*/back-end\.yml'
    -
      name: "Install orchestra/testbench"
      run: "composer require --dev --update-with-all-dependencies orchestra/testbench"
    -
      name: "Perform static analysis"
      run: "composer exec -- phpstan || true 'Annotate only'"
